// Code generated by protoc-gen-go. DO NOT EDIT.
// source: averagestream.proto

package averagestreampb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NumberRequest struct {
	Request              int64    `protobuf:"varint,1,opt,name=Request,proto3" json:"Request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberRequest) Reset()         { *m = NumberRequest{} }
func (m *NumberRequest) String() string { return proto.CompactTextString(m) }
func (*NumberRequest) ProtoMessage()    {}
func (*NumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_averagestream_a1337841c4cef8ec, []int{0}
}
func (m *NumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberRequest.Unmarshal(m, b)
}
func (m *NumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberRequest.Marshal(b, m, deterministic)
}
func (dst *NumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberRequest.Merge(dst, src)
}
func (m *NumberRequest) XXX_Size() int {
	return xxx_messageInfo_NumberRequest.Size(m)
}
func (m *NumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NumberRequest proto.InternalMessageInfo

func (m *NumberRequest) GetRequest() int64 {
	if m != nil {
		return m.Request
	}
	return 0
}

type NumberResponse struct {
	Response             float32  `protobuf:"fixed32,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberResponse) Reset()         { *m = NumberResponse{} }
func (m *NumberResponse) String() string { return proto.CompactTextString(m) }
func (*NumberResponse) ProtoMessage()    {}
func (*NumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_averagestream_a1337841c4cef8ec, []int{1}
}
func (m *NumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberResponse.Unmarshal(m, b)
}
func (m *NumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberResponse.Marshal(b, m, deterministic)
}
func (dst *NumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberResponse.Merge(dst, src)
}
func (m *NumberResponse) XXX_Size() int {
	return xxx_messageInfo_NumberResponse.Size(m)
}
func (m *NumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NumberResponse proto.InternalMessageInfo

func (m *NumberResponse) GetResponse() float32 {
	if m != nil {
		return m.Response
	}
	return 0
}

func init() {
	proto.RegisterType((*NumberRequest)(nil), "averagestream.NumberRequest")
	proto.RegisterType((*NumberResponse)(nil), "averagestream.NumberResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AveragestreamClient is the client API for Averagestream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AveragestreamClient interface {
	Average(ctx context.Context, opts ...grpc.CallOption) (Averagestream_AverageClient, error)
}

type averagestreamClient struct {
	cc *grpc.ClientConn
}

func NewAveragestreamClient(cc *grpc.ClientConn) AveragestreamClient {
	return &averagestreamClient{cc}
}

func (c *averagestreamClient) Average(ctx context.Context, opts ...grpc.CallOption) (Averagestream_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Averagestream_serviceDesc.Streams[0], "/averagestream.Averagestream/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &averagestreamAverageClient{stream}
	return x, nil
}

type Averagestream_AverageClient interface {
	Send(*NumberRequest) error
	CloseAndRecv() (*NumberResponse, error)
	grpc.ClientStream
}

type averagestreamAverageClient struct {
	grpc.ClientStream
}

func (x *averagestreamAverageClient) Send(m *NumberRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *averagestreamAverageClient) CloseAndRecv() (*NumberResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(NumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AveragestreamServer is the server API for Averagestream service.
type AveragestreamServer interface {
	Average(Averagestream_AverageServer) error
}

func RegisterAveragestreamServer(s *grpc.Server, srv AveragestreamServer) {
	s.RegisterService(&_Averagestream_serviceDesc, srv)
}

func _Averagestream_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AveragestreamServer).Average(&averagestreamAverageServer{stream})
}

type Averagestream_AverageServer interface {
	SendAndClose(*NumberResponse) error
	Recv() (*NumberRequest, error)
	grpc.ServerStream
}

type averagestreamAverageServer struct {
	grpc.ServerStream
}

func (x *averagestreamAverageServer) SendAndClose(m *NumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *averagestreamAverageServer) Recv() (*NumberRequest, error) {
	m := new(NumberRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Averagestream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "averagestream.Averagestream",
	HandlerType: (*AveragestreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Average",
			Handler:       _Averagestream_Average_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "averagestream.proto",
}

func init() { proto.RegisterFile("averagestream.proto", fileDescriptor_averagestream_a1337841c4cef8ec) }

var fileDescriptor_averagestream_a1337841c4cef8ec = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0x4b, 0x2d,
	0x4a, 0x4c, 0x4f, 0x2d, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x45, 0x11, 0x54, 0xd2, 0xe4, 0xe2, 0xf5, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x0a, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0, 0x62, 0x87, 0x32, 0x25, 0x18, 0x15, 0x18, 0x35, 0x98,
	0x83, 0x60, 0x5c, 0x25, 0x1d, 0x2e, 0x3e, 0x98, 0xd2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21,
	0x29, 0x2e, 0x0e, 0x18, 0x1b, 0xac, 0x98, 0x29, 0x08, 0xce, 0x37, 0x8a, 0xe6, 0xe2, 0x75, 0x44,
	0xb6, 0x49, 0xc8, 0x8b, 0x8b, 0x1d, 0x2a, 0x20, 0x24, 0xa3, 0x87, 0xea, 0x32, 0x14, 0x17, 0x48,
	0xc9, 0xe2, 0x90, 0x85, 0x18, 0xac, 0xc4, 0xa0, 0xc1, 0xe8, 0x24, 0x18, 0xc5, 0x8f, 0xa2, 0xa6,
	0x20, 0x29, 0x89, 0x0d, 0xec, 0x3d, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xa3, 0x88,
	0x6b, 0xf5, 0x00, 0x00, 0x00,
}
